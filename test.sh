# CREATE TODO WITH ALL PARAMS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Test Test 1\", priority: 5) {\n    id,\n    description,\n    priority,\n    createdAt\n  }\n}"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Test Test 2\", priority: 2) {\n    id,\n    description,\n    priority,\n    createdAt\n  }\n}"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Test Test 3\", priority: 4) {\n    id,\n    description,\n    priority,\n    createdAt\n  }\n}"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Test Test 4\", priority: 1) {\n    id,\n    description,\n    priority,\n    createdAt\n  }\n}"}' --compressed
# CREATE TODO WITHOUT PRIORITY
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Test Test 5\") {\n    id,\n    description,\n    priority,\n    createdAt\n  }\n}"}' --compressed
# GET ALL TODOS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# GET ALL TODOS ORDERED BY PRIORITY ASC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\") {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# GET ALL TODOS ORDERED BY PRIORITY DESC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: \"desc\") {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# GET NOT COMPLETED TODOS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(completed: false) {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# GET NOT COMPLETED TODOS BY PRIORITY ASC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", completed: false) {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# GET NOT COMPLETED TODOS BY PRIORITY DESC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: \"desc\", completed: false) {\n    id,\n    description,\n    priority,\n    completed,\n    createdAt\n  }\n}"}' --compressed
# UPDATE TODO
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  updateTodo(id: 1, description: \"New Decription\") {\n    id,\n    description,\n    priority\n  }\n}"}' --compressed
# DELETE TODO
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  deleteTodo(id: 1)\n}"}' --compressed
# COMPLETE TODO
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  completeTodo(id: 2) {\n    id,\n    description,\n    priority,\n    completed\n  }\n}"}' --compressed
