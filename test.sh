# CREATE TODO WITH ALL PARAMS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 1\", priority: 1) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 2\", priority: 2) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 3\", priority: 3) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 4\", priority: 4) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 5\", priority: 5) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
# CREATE TODO WITHOUT PRIORITY
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  createTodo(description: \"Todo test 6\") {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed
# GET ALL TODOS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# GET ALL TODOS ORDERED BY PRIORITY ASC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: 1) {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# GET ALL TODOS ORDERED BY PRIORITY DESC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: -1) {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# GET UNCOMPLETED TODOS
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(completed:false) {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# GET UNCOMPLETED TODOS ORDERED BY PRIORITY ASC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: 1, completed:false) {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# GET UNCOMPLETED TODOS ORDERED BY PRIORITY DESC
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"{\n  getAllTodos(sortField: \"priority\", sortOrder: -1, completed:false) {\n    id,\n    description,\n    createdAt,\n    completed,\n    priority\n  }\n}"}' --compressed
# UPDATE TODO
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  updateTodo(id: \"5d91cc72dc935b121241b09b\", description: \"Todo test 1 updated\", priority: 10) {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}"}' --compressed
# DELETE TODO
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  deleteTodo(id: \"5d91cc9adc935b121241b09f\")\n}\n"}' --compressed
# MARK TODO COMPLETE
curl 'http://localhost:4000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{"query":"mutation {\n  markTodo(id: \"5d91cc96dc935b121241b09e\") {\n    id\n    description\n    priority\n    createdAt\n    completed\n  }\n}\n"}' --compressed